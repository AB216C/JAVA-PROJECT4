import java.sql.*;
import java.util.ArrayList;
import java.util.List;

// Student class
class Student {
    private int id;
    private String name;
    private String email;

    public Student(String name, String email) {
        this.name = name;
        this.email = email;
    }

    public Student(int id, String name, String email) {
        this(name, email);
        this.id = id;
    }

    public int getId() { return id; }
    public String getName() { return name; }
    public String getEmail() { return email; }

    public void setId(int id) { this.id = id; }
}

public class JDBCTest {

    private static Connection conn;

    public static void main(String[] args) {
        String url = "jdbc:h2:mem:";

        try {
            conn = DriverManager.getConnection(url);
            createTable();

            // Create students
            createStudent(new Student("Briana", "b@gmail.com"));
            createStudent(new Student("Nema", "n@gmail.com"));
            createStudent(new Student("Bini", "b@gmail.com"));

            // Read all students
            System.out.println("All Students:");
            getAllStudents().forEach(s -> System.out.println(s.getId() + "_" + s.getName() + "_" + s.getEmail()));

            // Get student by ID
            System.out.println("\nStudent with ID 2:");
            Student student = getStudentById(2);
            if (student != null)
                System.out.println(student.getId() + "_" + student.getName() + "_" + student.getEmail());

            // Update student
            System.out.println("\nUpdating student with ID 2...");
            updateStudent(new Student(2, "Nema Updated", "newemail@gmail.com"));

            // Read updated student
            Student updated = getStudentById(2);
            System.out.println("Updated Student: " + updated.getId() + "_" + updated.getName() + "_" + updated.getEmail());

            // Delete student
            System.out.println("\nDeleting student with ID 3...");
            deleteStudent(3);

            // Final list
            System.out.println("\nStudents after deletion:");
            getAllStudents().forEach(s -> System.out.println(s.getId() + "_" + s.getName() + "_" + s.getEmail()));

        } catch (SQLException e) {
            throw new RuntimeException(e);
        }
    }

    private static void createTable() throws SQLException {
        Statement stmt = conn.createStatement();
        String createTableSQL = """
                CREATE TABLE users (
                    id INT AUTO_INCREMENT PRIMARY KEY,
                    name VARCHAR(100),
                    email VARCHAR(200)
                )
                """;
        stmt.executeUpdate(createTableSQL);
    }

    private static void createStudent(Student student) throws SQLException {
        String insertSQL = "INSERT INTO users (name, email) VALUES (?, ?)";
        try (PreparedStatement stmt = conn.prepareStatement(insertSQL, Statement.RETURN_GENERATED_KEYS)) {
            stmt.setString(1, student.getName());
            stmt.setString(2, student.getEmail());
            stmt.executeUpdate();

            ResultSet generatedKeys = stmt.getGeneratedKeys();
            if (generatedKeys.next()) {
                student.setId(generatedKeys.getInt(1));
            }
        }
    }

    private static Student getStudentById(int id) throws SQLException {
        String query = "SELECT * FROM users WHERE id = ?";
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, id);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return new Student(rs.getInt("id"), rs.getString("name"), rs.getString("email"));
            }
        }
        return null;
    }

    private static List<Student> getAllStudents() throws SQLException {
        List<Student> students = new ArrayList<>();
        String query = "SELECT * FROM users";
        try (Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {

            while (rs.next()) {
                students.add(new Student(rs.getInt("id"), rs.getString("name"), rs.getString("email")));
            }
        }
        return students;
    }

    private static void updateStudent(Student student) throws SQLException {
        String updateSQL = "UPDATE users SET name = ?, email = ? WHERE id = ?";
        try (PreparedStatement stmt = conn.prepareStatement(updateSQL)) {
            stmt.setString(1, student.getName());
            stmt.setString(2, student.getEmail());
            stmt.setInt(3, student.getId());
            stmt.executeUpdate();
        }
    }

    private static void deleteStudent(int id) throws SQLException {
        String deleteSQL = "DELETE FROM users WHERE id = ?";
        try (PreparedStatement stmt = conn.prepareStatement(deleteSQL)) {
            stmt.setInt(1, id);
            stmt.executeUpdate();
        }
    }
}



//These are the questions ans answers
All Students:
1_Briana_b@gmail.com
2_Nema_n@gmail.com
3_Bini_b@gmail.com

Student with ID 2:
2_Nema_n@gmail.com

Updating student with ID 2...
Updated Student: 2_Nema Updated_newemail@gmail.com

Deleting student with ID 3...

Students after deletion:
1_Briana_b@gmail.com
2_Nema Updated_newemail@gmail.com
